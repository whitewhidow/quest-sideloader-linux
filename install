#!/bin/bash
clear
printf "\n"
printf "\n"
printf "\n"
echo -e "===================================================================="
echo -e "= Quest(1/2) sideloader for Linux & Mac(OSX) ======================="
echo -e "===================================================================="
echo -e "========================================= by Whitewhidow/BranchBit ="
echo -e "===================================== support:contact@branchbit.be ="
echo -e "============================== https://t.me/whitewhidow_q2_working ="
echo -e "================ www.github.com/whitewhidow/quest-sideloader-linux ="
echo -e "===================================================================="
printf "\n"
case "$OSTYPE" in
  linux*)   OSTYPE="linux" ;;	
  darwin*)  OSTYPE="mac" ;;
  *)        echo "unknown OS: $OSTYPE DETECTED" && echo "please submit a ticket om github?" && sleep 30 && exit ;;
esac




function failed(){
	LINE="\n\nInstall seems to have failed with the following reason:\n\n$1.\n\nPlease paste the terminal output to github,\nI will gladly assist! \n"
	[ -z $CI ] && zenity --warning --text="$LINE" --width="600" 2> /dev/null
	echo -e "$LINE"
	read -p "Press [ENTER] to continue." < "$(tty 0>&2)"
	exit 1
}



echo "CHECKING AND INSTALLING DEPENDENCIES:"


if [ $OSTYPE == "mac" ]; then

	echo "Checking brew for mac."
	if ! command -v brew &> /dev/null; then
		echo "-> Please wait while we attempt to install missing 'brew' package. (requires sudo)"
		/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)" && echo "Brew installed."
	fi
	if ! command -v git &> /dev/null; then	
		failed "Brew could not be installed ?"
	else
	 	echo "Brew installed at $(which brew)"
	fi


  echo "Checking xcode command line tools for mac."
  echo "test: $(xcode-select -p)"
	if ! xcode-select -p 1>/dev/null ; then
		echo "-> Please wait while we attempt to install xcode command line tools"
		xcode-select --install && echo "Xcode command line tools installed."
	fi
	if ! xcode-select -p 1>/dev/null ; then
    echo 'STILL NOT INSTALLED XCODE SHIT'
    exit 1
  else
    echo "Xcode installed"
  fi


  echo "Checking OSXFUSE for mac."
  [ -f "/usr/local/include/osxfuse/fuse.h" ] && OLDFUSE=true
  if [[ -z $OLDFUSE ]]; then
    brew cask install osxfuse
    [ -f "/usr/local/include/osxfuse/fuse.h" ] && NEWFUSE=true
  fi

fi






echo "Checking git installation."
if ! command -v git &> /dev/null; then
  echo "-> Please wait while we attempt to install missing 'git' package. (requires sudo)"
  (sudo apt install git 2> /dev/null || brew install git ) && echo "Git installed."
fi
if ! command -v git &> /dev/null; then
	failed "Git could not be installed ?"
	failed "Git could not be installed ?"base
else
 	echo "Git installed at $(which git)"
fi








echo "Checking unzip installation."
if ! command -v unzip &> /dev/null; then
  echo "-> Please wait while we attempt to install missing 'unzip' package. (requires sudo)"
  (sudo apt install unzip 2> /dev/null || brew install unzip )
fi
if ! command -v unzip &> /dev/null; then	
	failed "Unzip could not be installed ?"
else
 	echo "Unzip installed at $(which unzip)"
fi



echo "Checking adb."
if ! command -v adb &> /dev/null; then
  if [ $OSTYPE == "mac" ]; then
	brew cask install android-platform-tools
  fi
  
  if [ $OSTYPE == "linux" ]; then
	echo "-> Please wait while we attempt to install missing 'adb' package. (requires sudo)"
	sudo apt install android-tools-adb 2> /dev/null
  fi
fi

if ! command -v adb &> /dev/null; then	
	failed "Adb could not be installed ?"
else
 	echo "Adb installed at $(which adb)"
fi





echo "Checking aapt."
if ! command -v aapt &> /dev/null; then
	if [ $OSTYPE == "linux" ]; then
	    echo "-> Please wait while we attempt to install missing 'aapt' package. (requires sudo)"
	    sudo apt install android-sdk-build-tools
	fi
	if [ $OSTYPE == "mac" ]; then
	    echo "-> Please wait while we attempt to install missing 'aapt' package. (requires sudo)"
	    curl -s https://raw.githubusercontent.com/whitewhidow/quest-sideloader-linux/main/mac_aapt_lib/aapt -o aapt
	    #https://dl.androidaapt.com/aapt-macos.zip
	    chmod +x ./aapt
	    sudo cp ./aapt /usr/local/bin/
	fi
fi

if ! command -v aapt &> /dev/null; then
	failed "Aapt could not be installed ?"
else
 	echo "Aapt installed at $(which aapt)"
fi


echo "Checking pv."
if ! command -v pv &> /dev/null; then
  echo "-> Please wait while we attempt to install missing 'pv' package. (requires sudo)"
  (sudo apt install pv 2> /dev/null || brew install pv)
fi
if ! command -v pv &> /dev/null; then
  failed "pv could not be installed !"
else
 	echo "pv installed at $(which zenity)"
fi


echo "Checking zenity."
if ! command -v zenity &> /dev/null; then	
  echo "-> Please wait while we attempt to install missing 'zenity' package. (requires sudo)"
  (sudo apt install zenity 2> /dev/null || brew install zenity)
fi
if ! command -v zenity &> /dev/null; then
  if [ $OSTYPE == "mac" ]; then
    failed "You are one mac, and Zenity could not be installed on the first try, this is a known issue, please try re-running this installer a second time."
  else
    failed "Zenity could not be installed !"
  fi
else
 	echo "Zenity installed at $(which zenity)"
fi




echo 	"Checking rclone."
#big sur maybe needs instead : https://rclone.org/install/#macos-installation-from-precompiled-binary-using-curl

if ! command -v rclone &> /dev/null; then
  echo "-> Please wait while we attempt to install missing 'rclone' package. (requires sudo)"
  curl --silent https://rclone.org/install.sh | sudo bash > /dev/null
  if [ $OSTYPE == "mac" ]; then
    brew install rclone
  fi
fi
if ! command -v rclone &> /dev/null; then	
	failed "Rclone could not be installed ?"
else
 	echo "Rclone installed at $(which rclone)"
 	RCLONEINSTALLED=true
fi



BRANCH="main"
if [ ! -z "$1" ]; then
    BRANCH="$1"
fi
if [[ "$BRANCH" == "local" ]]; then
	echo -ne ""
fi


echo "Fetching newest version ($BRANCH)."


OLDPATH="$PWD"

if [[ "$BRANCH" == "local" ]]; then
	cd $OLDPATH
else
	cd /tmp
	rm -rf ./quest-sideloader-linux
	git clone https://github.com/whitewhidow/quest-sideloader-linux.git
	cd quest-sideloader-linux
	git checkout $BRANCH
fi



echo "Copying executables to PATH (requires sudo)"
sudo cp ./install /usr/local/bin/sideload-update
sudo cp ./sideloader-config /usr/local/bin/sideloader-config

sudo cp ./sideload /usr/local/bin/sideload

sudo cp ./sideload-gui /usr/local/bin/sideload-gui
sudo cp ./whitewhidow-mount /usr/local/bin/whitewhidow-mount


sudo cp ./sideload-change-username /usr/local/bin/sideload-change-username
sudo cp ./sideload-change-rate /usr/local/bin/sideload-change-rate
sudo cp ./sideload-change-res /usr/local/bin/sideload-change-res

sudo cp ./sideload-check-updates /usr/local/bin/sideload-check-updates
sudo cp ./sideload-updatebadges /usr/local/bin/sideload-updatebadges



VERSION=$(git rev-parse HEAD)
mkdir -p $HOME/quest-sideloader-linux
touch $HOME/quest-sideloader-linux/sideloader-version.txt
echo "$VERSION" > $HOME/quest-sideloader-linux/sideloader-version.txt

cd $OLDPATH


# IF INSTALL SUCCESS AND INSTALLED NEW OSXFUSE
if [ ! -z $NEWFUSE ]; then
  SUCCESS="\n\n -> Install was almost successfull.\n\nHowever your system will need to reboot because (you are one mac osx) and we have just installed OSXFUSE.\n\n -> Please reboot and re-run this installer.\n\n\n"
  echo -e "$SUCCESS"
  [ -z $CI ] && zenity --question --text="$SUCCESS" --width="600" 2> /dev/null
else
  # IF INSTALL SUCCESS AND NO NEW OSXFUSE INSTALLED
  echo -e ""
  SUCCESS="\n\n -> Install seems to have been successfull\n\nWould you like to start the sideload-gui now.\n\n"
  [ -z $CI ] && zenity --question --text="$SUCCESS" --width="600"
  if [ $? = 0 ]; then
      exec /usr/local/bin/sideload-gui
      exit 0
  fi
fi




exit 0



